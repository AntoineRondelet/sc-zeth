#!/usr/bin/env python3

from zeth.zksnark import get_zksnark_provider
from zeth.prover_client import ProverClient
from commands.constants import ZKSNARK_DEFAULT, PROVER_SERVER_ENDPOINT_DEFAULT, \
    INSTANCEFILE_DEFAULT, KEYFILE_DEFAULT, WALLET_DIR_DEFAULT
from commands.zeth_deploy import deploy
from commands.zeth_key import key
from commands.zeth_deposit import deposit
from commands.zeth_sync import sync
from commands.zeth_send import send
from commands.zeth_withdraw import withdraw
from commands.zeth_balance import balance
from commands.zeth_notes import notes
from click import group, option, pass_context
from typing import Any, Optional


@group()
@option("--host", help="Ethereum node address host:rpc-port")
@option(
    "--prover-server",
    default=PROVER_SERVER_ENDPOINT_DEFAULT,
    help=f"Prover server endpoint (default={PROVER_SERVER_ENDPOINT_DEFAULT})")
@option(
    "--zksnark",
    "zksnark_name",
    default=ZKSNARK_DEFAULT,
    help="GROTH16 or PGHR13 (default=GROTH16)")
@option(
    "--instance-file",
    default=INSTANCEFILE_DEFAULT,
    help=f"Instance file (default={INSTANCEFILE_DEFAULT})")
@option(
    "--key-file",
    default=KEYFILE_DEFAULT,
    help=f"Instance file (default={INSTANCEFILE_DEFAULT})")
@option(
    "--wallet-dir",
    default=WALLET_DIR_DEFAULT,
    help=f"Wallet directory (\"{WALLET_DIR_DEFAULT}\")")
@pass_context
def zeth(
        ctx: Any,
        host: Optional[str],
        prover_server: str,
        zksnark_name: str,
        instance_file: str,
        key_file: str,
        wallet_directory: str) -> None:
    ctx.ensure_object(dict)
    ctx.obj["HOST"] = host
    ctx.obj["PROVER_CLIENT"] = ProverClient(prover_server)
    ctx.obj["ZKSNARK"] = get_zksnark_provider(zksnark_name)
    ctx.obj["INSTANCE_FILE"] = instance_file
    ctx.obj["KEY_FILE"] = key_file
    ctx.obj["WALLET_DIR"] = wallet_directory


zeth.add_command(deploy)
zeth.add_command(key)
zeth.add_command(deposit)
zeth.add_command(sync)
zeth.add_command(send)
zeth.add_command(withdraw)
zeth.add_command(balance)
zeth.add_command(notes)


if __name__ == "__main__":
    zeth()  # pylint: disable=no-value-for-parameter
