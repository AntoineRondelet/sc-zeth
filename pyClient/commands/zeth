#!/usr/bin/env python3

from zeth.zksnark import get_zksnark_provider
from zeth.prover_client import ProverClient
from commands.constants import \
    ZKSNARK_DEFAULT, PROVER_SERVER_ENDPOINT_DEFAULT, INSTANCEFILE_DEFAULT, \
    KEYFILE_DEFAULT, WALLET_DIR_DEFAULT, ETH_RPC_ENDPOINT_DEFAULT
from commands.zeth_deploy import deploy
from commands.zeth_key import key
from commands.zeth_sync import sync
from commands.zeth_mix import mix
from commands.zeth_balance import balance
from commands.zeth_notes import notes
from commands.zeth_commits import commits
from click import group, command, option, pass_context, ClickException
from click_default_group import DefaultGroup
from typing import Any, Optional


@command()
@pass_context
def help(ctx) -> None:
    """
    Print help and exit
    """
    # Note, this command is implemented to ensure that an error is raised if no
    # subcommand is specified (which also catches errors in scripts).
    print(ctx.parent.get_help())
    raise ClickException("no command specified")


@group(cls=DefaultGroup, default_if_no_args=True, default="help")
@option(
    "--eth-rpc",
    default=ETH_RPC_ENDPOINT_DEFAULT,
    help=f"Ethereum rpc end-point")
@option(
    "--prover-server",
    default=PROVER_SERVER_ENDPOINT_DEFAULT,
    help=f"Prover server endpoint (default={PROVER_SERVER_ENDPOINT_DEFAULT})")
@option(
    "--zksnark",
    "zksnark_name",
    default=ZKSNARK_DEFAULT,
    help="GROTH16 or PGHR13 (default=GROTH16)")
@option(
    "--instance-file",
    default=INSTANCEFILE_DEFAULT,
    help=f"Instance file (default={INSTANCEFILE_DEFAULT})")
@option(
    "--key-file",
    default=KEYFILE_DEFAULT,
    help=f"Instance file (default={INSTANCEFILE_DEFAULT})")
@option(
    "--wallet-dir",
    default=WALLET_DIR_DEFAULT,
    help=f"Wallet directory (\"{WALLET_DIR_DEFAULT}\")")
@pass_context
def zeth(
        ctx: Any,
        eth_rpc: Optional[str],
        prover_server: str,
        zksnark_name: str,
        instance_file: str,
        key_file: str,
        wallet_dir: str) -> None:
    if ctx.invoked_subcommand == "help":
        ctx.invoke(help)
    ctx.ensure_object(dict)
    ctx.obj["ETH_RPC"] = eth_rpc
    ctx.obj["PROVER_CLIENT"] = ProverClient(prover_server)
    ctx.obj["ZKSNARK"] = get_zksnark_provider(zksnark_name)
    ctx.obj["INSTANCE_FILE"] = instance_file
    ctx.obj["KEY_FILE"] = key_file
    ctx.obj["WALLET_DIR"] = wallet_dir


zeth.add_command(deploy)
zeth.add_command(key)
zeth.add_command(sync)
zeth.add_command(mix)
zeth.add_command(balance)
zeth.add_command(notes)
zeth.add_command(commits)
zeth.add_command(help)


if __name__ == "__main__":
    zeth()  # pylint: disable=no-value-for-parameter
